{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Kenny/Desktop/projects/teambeta/frontend/src/Campaigns/EditModal.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginBottom: theme.spacing(2)\n  },\n  description: {\n    marginTop: theme.spacing(2)\n  },\n  dialog: {\n    color: \"black\"\n  }\n}));\n\nconst EditModal = ({\n  Campaign\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(Campaign.campaignTitle);\n  const [description, setDescription] = useState(Campaign.description);\n  const [selectedStartDate, setSelectedStartDate] = useState(new Date(Campaign.startTime));\n  const [selectedEndDate, setSelectedEndDate] = useState(new Date(Campaign.endTime));\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    fetch(\"http://localhost:3001/Campaigns/\" + Campaign._id, {\n      method: \"PATCH\",\n      headers: {},\n      body: new URLSearchParams({\n        id: `${Campaign._id}`,\n        campaignTitle: `${title}`,\n        startTime: selectedStartDate.toUTCString(),\n        endTime: selectedEndDate.toUTCString(),\n        description: `${description}`\n      })\n    }).then(res => console.log(\"Updating Campaign: \" + res));\n    window.location.reload();\n  };\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n  };\n\n  const handleTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: handleOpen,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Edit Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Campaign Title\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: title,\n          onChange: handleTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              className: classes.startDate,\n              margin: \"normal\",\n              id: \"start-date-picker\",\n              label: \"Start Date\",\n              format: \"MM/dd/yyyy\",\n              value: selectedStartDate,\n              onChange: handleStartDateChange,\n              KeyboardButtonProps: {\n                \"aria-label\": \"change date\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              margin: \"normal\",\n              id: \"end-date-picker\",\n              label: \"End Date\",\n              format: \"MM/dd/yyyy\",\n              value: selectedEndDate,\n              onChange: handleEndDateChange,\n              KeyboardButtonProps: {\n                \"aria-label\": \"change date\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.description,\n          id: \"outlined-multiline-static\",\n          label: \"Multiline\",\n          multiline: true,\n          rows: 4,\n          defaultValue: \"Default Value\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: description,\n          onChange: handleDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditModal, \"ED/C0li8GrQFWlAuURnS6bweJVY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/Kenny/Desktop/projects/teambeta/frontend/src/Campaigns/EditModal.js"],"names":["Button","React","useState","TextField","Dialog","DialogActions","DialogContent","DialogTitle","makeStyles","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","useStyles","theme","button","marginBottom","spacing","description","marginTop","dialog","color","EditModal","Campaign","classes","open","setOpen","title","setTitle","campaignTitle","setDescription","selectedStartDate","setSelectedStartDate","Date","startTime","selectedEndDate","setSelectedEndDate","endTime","handleOpen","handleClose","fetch","_id","method","headers","body","URLSearchParams","id","toUTCString","then","res","console","log","window","location","reload","handleStartDateChange","date","handleEndDateChange","handleTitle","event","target","value","handleDescription","startDate"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(2),\n  },\n  description: {\n    marginTop: theme.spacing(2),\n  },\n  dialog: {\n    color: \"black\",\n  },\n}));\n\nconst EditModal = ({ Campaign }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(Campaign.campaignTitle);\n  const [description, setDescription] = useState(Campaign.description);\n  const [selectedStartDate, setSelectedStartDate] = useState(\n    new Date(Campaign.startTime)\n  );\n  const [selectedEndDate, setSelectedEndDate] = useState(\n    new Date(Campaign.endTime)\n  );\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\n    fetch(\"http://localhost:3001/Campaigns/\" + Campaign._id, {\n      method: \"PATCH\",\n      headers: {},\n      body: new URLSearchParams({\n        id: `${Campaign._id}`,\n        campaignTitle: `${title}`,\n        startTime: selectedStartDate.toUTCString(),\n        endTime: selectedEndDate.toUTCString(),\n        description: `${description}`,\n      }),\n    }).then((res) => console.log(\"Updating Campaign: \" + res));\n    window.location.reload();\n  };\n\n  const handleStartDateChange = (date) => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = (date) => {\n    setSelectedEndDate(date);\n  };\n\n  const handleTitle = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\n        Edit\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Campaign</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Campaign Title\"\n            variant=\"outlined\"\n            fullWidth\n            value={title}\n            onChange={handleTitle}\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-between\">\n              <KeyboardDatePicker\n                className={classes.startDate}\n                margin=\"normal\"\n                id=\"start-date-picker\"\n                label=\"Start Date\"\n                format=\"MM/dd/yyyy\"\n                value={selectedStartDate}\n                onChange={handleStartDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"end-date-picker\"\n                label=\"End Date\"\n                format=\"MM/dd/yyyy\"\n                value={selectedEndDate}\n                onChange={handleEndDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          <TextField\n            className={classes.description}\n            id=\"outlined-multiline-static\"\n            label=\"Multiline\"\n            multiline\n            rows={4}\n            defaultValue=\"Default Value\"\n            variant=\"outlined\"\n            fullWidth\n            value={description}\n            onChange={handleDescription}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}